{"version":3,"sources":["resetIcon.svg","components/bottomBlock/SingleSelectorBlock.js","components/bottomBlock/Bottomblock.js","App.js","reportWebVitals.js","index.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgResetIcon","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","width","height","viewBox","style","position","left","ref","id","stroke","fillRule","fill","fillOpacity","d","ForwardRef","useStyles","makeStyles","theme","selectorSection","marginBottom","backgroundColor","inputField","checkBoxGrid","margin","markAsComplete","color","cursor","tagContainer","SingleSelectorBlock","todoData","selectedValue","clickedMarkAscompleted","disabled","inprocessTodoData","handleTagClick","classes","Paper","className","FormControlLabel","value","control","Radio","label","todo","tags","map","tag","Typography","variant","align","display","onClick","console","log","marginTop","completedLable","padding","filterGrid","paddingBottom","Bottomblock","changeInprocessTodoData","changeCompletedTodoData","completedTodoData","changeSelectedValue","useState","filter","chageFilter","chanageTag","item","find","tagItem","Grid","FormControl","component","FormLabel","RadioGroup","onChange","e","parseInt","root","flexGrow","paper","spacing","textAlign","palette","text","secondary","minHeight","paperReset","paddingInline","borderRadius","boxShadow","App","inputData","changeInputData","todoIndex","changeTodoIndex","useEffect","localSTInprocessTodoData","JSON","parse","localStorage","getItem","localSTCompletedTodoData","localSTTodoIndex","setItem","stringify","container","xs","elevation","clear","noValidate","autoComplete","onSubmit","preventDefault","splitArr","split","inputTodo","shift","TextField","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeff6cdd.chunk.js","sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgResetIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    style: {\n      position: \"absolute\",\n      left: 10\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"#56d68b\",\n      fillOpacity: 1\n    },\n    d: \"M 15.71875 2.515625 C 15.65625 2.578125 15.625 3.023438 15.625 4.007812 L 15.625 5.414062 L 15.054688 4.867188 C 14.109375 3.96875 13.226562 3.453125 11.976562 3.070312 C 11.351562 2.882812 11.179688 2.859375 10 2.859375 C 8.820312 2.859375 8.648438 2.882812 8.023438 3.070312 C 5.539062 3.835938 3.835938 5.539062 3.070312 8.023438 C 2.882812 8.648438 2.859375 8.820312 2.859375 10 C 2.859375 11.179688 2.882812 11.351562 3.070312 11.976562 C 3.835938 14.460938 5.539062 16.164062 8.023438 16.929688 C 8.648438 17.117188 8.820312 17.140625 10 17.140625 C 11.179688 17.140625 11.351562 17.117188 11.976562 16.929688 C 14.015625 16.304688 15.523438 15.054688 16.4375 13.226562 C 16.828125 12.445312 17.109375 11.421875 17.164062 10.570312 C 17.21875 9.757812 17.15625 9.609375 16.789062 9.609375 C 16.53125 9.609375 16.40625 9.789062 16.40625 10.179688 C 16.40625 10.328125 16.351562 10.742188 16.28125 11.101562 C 15.78125 13.742188 13.742188 15.78125 11.101562 16.28125 C 10.28125 16.4375 9.71875 16.4375 8.90625 16.28125 C 6.390625 15.804688 4.476562 14.015625 3.78125 11.484375 C 3.585938 10.78125 3.585938 9.21875 3.78125 8.515625 C 4.476562 5.984375 6.390625 4.195312 8.90625 3.71875 C 9.65625 3.570312 10.226562 3.5625 10.9375 3.679688 C 12.226562 3.882812 13.476562 4.523438 14.40625 5.429688 L 14.960938 5.976562 L 13.601562 6 C 12.757812 6.007812 12.195312 6.054688 12.132812 6.101562 C 12.007812 6.210938 12 6.578125 12.125 6.703125 C 12.195312 6.773438 12.789062 6.796875 14.3125 6.796875 L 16.40625 6.796875 L 16.40625 4.757812 C 16.40625 3.507812 16.375 2.664062 16.328125 2.570312 C 16.234375 2.398438 15.867188 2.367188 15.71875 2.515625 Z M 15.71875 2.515625 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgResetIcon);\nexport default __webpack_public_path__ + \"static/media/resetIcon.bb1bdb80.svg\";\nexport { ForwardRef as ReactComponent };","import {React, useEffect, useState}from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {  Typography,Grid, Paper, FormLabel,FormControl,FormControlLabel,RadioGroup,Radio}from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    selectorSection:{\r\n      width:'90%',\r\n      marginBottom:'10px  !important',\r\n      backgroundColor:'#f9f6ff',\r\n    },\r\n    inputField:{\r\n      width: '90%',\r\n    },\r\n    checkBoxGrid:{\r\n      // overflowY : 'auto',\r\n      margin: '2%'\r\n    },\r\n    markAsComplete:{\r\n      color:'#56d68b',\r\n      cursor:'pointer',\r\n      \"&:hover\": {\r\n        color:'#f50057',\r\n      }\r\n      // backgroundColor:'black',\r\n    },\r\n    tagContainer:{\r\n      color:'#9e87e9',\r\n      backgroundColor:'#ede8fb',\r\n      margin:'10px',\r\n      cursor:'pointer',\r\n    }\r\n}));\r\n\r\nfunction SingleSelectorBlock({todoData,selectedValue,clickedMarkAscompleted,inprocessTodoData,disabled,handleTagClick}) {\r\n  // let [todo,changeTodo]=useState('');\r\n  // let [tags,changeTags]=useState([]);\r\n  //   useEffect(()=>{\r\n  //     if(todoData.todo){\r\n  //     let arr=todoData.todo.split('#');\r\n  //     changeTodo(arr[0]);\r\n  //     arr.shift();\r\n\r\n  //     changeTags(arr)\r\n  //     console.log(arr)\r\n  //     }\r\n  //   },[todoData,inprocessTodoData])\r\n    const classes = useStyles();\r\n    const markAscompleted=()=>{\r\n      clickedMarkAscompleted()\r\n      console.log(selectedValue)\r\n    }\r\n    // const onClickTag=(tag)=>{\r\n    //   handleTagClick(tag)\r\n    // }\r\n    return(\r\n        <Paper className={classes.selectorSection} >\r\n            <FormControlLabel  value={todoData.key} control={<Radio />} label={todoData.todo} disabled={disabled}/>\r\n            {todoData.tags.map((tag,i)=><Typography variant=\"subtitle1\" className={classes.tagContainer} \r\n                                          align='center' display=\"inline\" key={i} onClick={()=>handleTagClick(tag)}>\r\n                                          #{tag}\r\n                                        </Typography>)\r\n            }\r\n            \r\n            {selectedValue===todoData.key && !disabled &&<Typography variant=\"subtitle1\" className={classes.markAsComplete} \r\n                                                          align='center' color='secondary' onClick={markAscompleted} >\r\n                                                          Mark as completed\r\n                                                        </Typography>\r\n            }\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default SingleSelectorBlock;","import {React, useEffect, useState}from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {  Grid, Paper, FormLabel,FormControl,FormControlLabel,RadioGroup,Typography}from '@material-ui/core';\r\nimport SingleSelectorBlock from './SingleSelectorBlock';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    selectorSection:{\r\n      width:'90%',\r\n    },\r\n    inputField:{\r\n      width: '90%',\r\n    },\r\n    checkBoxGrid:{\r\n      // overflowY : 'auto',\r\n      margin: '2%',\r\n      marginTop:'20px',\r\n    },\r\n    completedLable:{\r\n      marginTop:'30px',\r\n      marginBottom:'10px',\r\n    },\r\n    tagContainer:{\r\n      color:'#9e87e9',\r\n      backgroundColor:'#ede8fb',\r\n      margin:'10px',\r\n      cursor:'pointer',\r\n      width: 'fit-content',\r\n      padding: '3px'\r\n    },\r\n    filterGrid:{\r\n      paddingBottom:'15px',\r\n    }\r\n}));\r\n\r\nfunction Bottomblock({inprocessTodoData,changeInprocessTodoData,changeCompletedTodoData,completedTodoData,selectedValue,changeSelectedValue}) {\r\n    const classes = useStyles();\r\n    let [filter,chageFilter]=useState('');\r\n    let [tag,chanageTag]=useState('');\r\n\r\n    let onChangeHandler=(e)=>{\r\n        changeSelectedValue( parseInt(e.target.value))\r\n    }\r\n\r\n    // useEffect(()=>{\r\n    //     if(inprocessTodoData){\r\n    //         for(const key in inprocessTodoData){\r\n    //           changeRadioButtonBlock([...radioButtonBlock,{...inprocessTodoData[key],key:key}])\r\n    //           // radioButtonBlock.push({...inprocessTodoData[key],key:key})\r\n    //         }\r\n    //         radioButtonBlock.map(item=>\r\n    //           console.log(<SingleSelectorBlock key={item.key}/>))\r\n    //     }\r\n    // },[inprocessTodoData])\r\n    let clickedMarkAscompleted=()=>{\r\n      let newInprocessTodoData=inprocessTodoData\r\n      changeCompletedTodoData([...inprocessTodoData.filter(item=>item.key===selectedValue),...completedTodoData,])\r\n      // console.log(inprocessTodoData.filter(item=>item.key!==selectedValue))\r\n      changeInprocessTodoData(inprocessTodoData.filter(item=>item.key!==selectedValue))\r\n    }\r\n    const handleTagClick=(tag)=>{\r\n      // inprocessTodoData.map(item=>{item.tags.map(tagItem=>tagItem===tag?console.log(item):null)});\r\n      chanageTag(tag)\r\n      chageFilter(inprocessTodoData.filter(item=>item.tags.find(tagItem=>tagItem==tag)))\r\n    }\r\n    const clearFilter=()=>{\r\n      chageFilter('');\r\n      chanageTag('')\r\n    }\r\n\r\n    \r\n    return(\r\n        <Grid align='left' className={classes.checkBoxGrid} >\r\n          {filter&&<Grid className={classes.filterGrid} >\r\n          <Typography variant=\"subtitle1\" className={classes.tagContainer} display=\"inline\"\r\n                          align='left' color='secondary' >\r\n                          #{tag}\r\n                        </Typography>\r\n                        <CancelIcon color=\"secondary\" onClick={clearFilter} cursor={'pointer'}>cancel</CancelIcon></Grid>\r\n                        }\r\n              {/* <CancelIcon>cancel</CancelIcon> */}\r\n              <FormControl component=\"fieldset\" >\r\n              <FormLabel className={classes.completedLable} component=\"legend\">{inprocessTodoData.length!==0?'In-Complete Tasks':'No Pending Tasks'}</FormLabel>\r\n                <RadioGroup value={selectedValue} onChange={onChangeHandler}>\r\n                  {/* <SingleSelectorBlock/> */}\r\n                  {filter&&filter.map(item=><SingleSelectorBlock \r\n                    key={item.key} \r\n                    clickedMarkAscompleted={clickedMarkAscompleted}\r\n                    todoData={item} \r\n                    handleTagClick={handleTagClick}\r\n                    inprocessTodoData={inprocessTodoData}\r\n                    selectedValue={selectedValue}/>)}\r\n\r\n                  {!filter&&inprocessTodoData.map(item=><SingleSelectorBlock \r\n                    key={item.key} \r\n                    clickedMarkAscompleted={clickedMarkAscompleted}\r\n                    todoData={item} \r\n                    handleTagClick={handleTagClick}\r\n                    inprocessTodoData={inprocessTodoData}\r\n                    selectedValue={selectedValue}/>)}\r\n                    \r\n                  {!filter&&completedTodoData.length!==0&&<FormLabel className={classes.completedLable} component=\"legend\">Completed Tasks</FormLabel>}\r\n                  {!filter&&completedTodoData.map(item=><SingleSelectorBlock \r\n                    key={item.key} \r\n                    clickedMarkAscompleted={clickedMarkAscompleted} \r\n                    disabled={true}\r\n                    todoData={item} \r\n                    handleTagClick={handleTagClick} \r\n                    inprocessTodoData={inprocessTodoData}\r\n                    selectedValue={selectedValue}/>)}\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Bottomblock","import './App.css';\nimport {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Paper, TextField, FormLabel,FormControl,FormControlLabel,RadioGroup,Radio, Hidden}from '@material-ui/core';\nimport { ReactComponent as ResetIcon } from './resetIcon.svg';\nimport Bottomblock from './components/bottomBlock/Bottomblock';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    minHeight:'80vh',\n  },\n  paperReset:{\n    color:'#56d68b',\n    position: 'relative',\n    width:'120px',\n    paddingInline:'24px',\n    borderRadius:'40px',\n    cursor:'pointer',\n    \"&:hover\": {\n      // backgroundColor:'#e9f9f0',\n      backgroundColor:'#dffdff',\n      boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n    }\n    // height:'30px',\n  },\n  selectorSection:{\n    width:'90%',\n  },\n  inputField:{\n    width: '90%',\n  },\n  checkBoxGrid:{\n    // overflowY : 'auto',\n    margin: '2%'\n  }\n}));\n\n\n\nfunction App() {\n  const classes = useStyles();\n  const [inprocessTodoData,changeInprocessTodoData]=useState([]);\n  const [completedTodoData,changeCompletedTodoData]=useState([]);\n  const [inputData,changeInputData]=useState('');\n  const [todoIndex,changeTodoIndex]=useState(0);\n  const [selectedValue,changeSelectedValue]=useState('')\n\n  useEffect(()=>{\n    // console.log(inprocessTodoData.length===0 , completedTodoData.length===0)\n\n    if(inprocessTodoData.length===0 && completedTodoData.length===0){\n      console.log('bye')\n      let localSTInprocessTodoData=JSON.parse(localStorage.getItem('inprocessTodoData'))\n      console.log(localSTInprocessTodoData);\n      if(localSTInprocessTodoData ){\n        changeInprocessTodoData(localSTInprocessTodoData);\n      }\n      console.log('bye')\n      let localSTCompletedTodoData=JSON.parse(localStorage.getItem('completedTodoData'))\n      if(localSTCompletedTodoData){\n        changeCompletedTodoData(localSTCompletedTodoData);\n      }\n      let localSTTodoIndex=JSON.parse(localStorage.getItem('todoIndex'));\n      if(localSTTodoIndex){\n        changeTodoIndex(localSTTodoIndex);\n      }\n    }\n    else{\n      localStorage.setItem('inprocessTodoData',JSON.stringify(inprocessTodoData));\n      localStorage.setItem('completedTodoData',JSON.stringify(completedTodoData));\n      localStorage.setItem('todoIndex',JSON.stringify(todoIndex));\n    }\n  },[inprocessTodoData,completedTodoData])\n\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    // changeInprocessTodoData({...inprocessTodoData,[todoIndex+1]:{todo:inputData}});\n    let splitArr=inputData.split('#');\n    let inputTodo=splitArr[0];\n    splitArr.shift();\n    changeInprocessTodoData([{key:todoIndex+1 ,todo:inputTodo, tags:splitArr},...inprocessTodoData]);\n\n    changeTodoIndex(todoIndex+1);\n    changeInputData('')\n  }\n  const changeInputDataFun=(e)=>{\n    changeInputData(e.target.value)\n  }\n  const handelReset=(e)=>{\n    localStorage.clear();\n    changeTodoIndex(0);\n    changeCompletedTodoData([]);\n    changeInprocessTodoData([]);\n    changeSelectedValue('')\n  }\n\n  return (\n    // <div className={classes.root}>\n    <Grid container spacing={3} spacing={0}\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: '100vh' }}>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h4\" align='left' >\n              To do list\n            </Typography>\n            <Grid  align='right'>\n              <Paper className={classes.paperReset} align='right' elevation={0} onClick={handelReset}>\n                <ResetIcon display=\"inline\"/>\n                <Typography variant=\"subtitle1\" display=\"inline\" >\n                  Reset all tasks\n                </Typography>\n              </Paper>\n            </Grid>\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n              <TextField id=\"standard-search\" className={classes.inputField} label=\"+ Add a task\" value={inputData} onChange={changeInputDataFun} type=\"input\" />\n            </form>\n\n            <Bottomblock changeInprocessTodoData={changeInprocessTodoData} \n              inprocessTodoData={inprocessTodoData} \n              completedTodoData={completedTodoData} \n              changeCompletedTodoData={changeCompletedTodoData} \n              selectedValue={selectedValue} \n              changeSelectedValue={changeSelectedValue}\n            ></Bottomblock>\n\n          </Paper>\n        </Grid>  \n    </Grid>\n\n // </div> \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}